include required(classpath("application"))

engine {
  filesystems {
    gcs {
      auth = "application-default"
      }
  }
}

backend.providers.Local.config.filesystems {
	gcs {
		auth = "application-default"
	}
}

backend {
  default = GCPBATCH

  providers {
    GCPBATCH {
      actor-factory = "cromwell.backend.google.batch.GcpBatchBackendLifecycleActorFactory"
      config {
        project = "broad-dsde-methods"

        root = "gs://palantir-workflows-test-execution"

        maximum-polling-interval = 600

        genomics {
          auth = "application-default"

          location = "us-central1"

          parallel-composite-upload-threshold="150M"
        }

        filesystems {
          gcs {
            auth = "application-default"
            project = "broad-dsde-methods"

            caching {
              # When a cache hit is found, the following duplication strategy will be followed to use the cached outputs
              # Possible values: "copy", "reference". Defaults to "copy"
              # "copy": Copy the output files
              # "reference": DO NOT copy the output files but point to the original output files instead.
              #              Will still make sure than all the original output files exist and are accessible before
              #              going forward with the cache hit.
              duplication-strategy = "copy"
            }
          }
        }

        default-runtime-attributes {
          cpu: 1
          failOnStderr: false
          continueOnReturnCode: 0
          memory: "2048 MB"
          bootDiskSizeGb: 10
          # Allowed to be a String, or a list of Strings
          disks: "local-disk 10 SSD"
          noAddress: false
          preemptible: 0
          zones: ["us-central1-a", "us-central1-b"]
        }

      }
    }
  }
}
